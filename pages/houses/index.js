import Head from "next/head";
import HomeCard from "../../components/HomeCard";
import styles from "../../styles/HomeList.module.css";
import { useState } from "react";
import SearchBar from "../../components/SearchBar";
import FilterBar from "../../components/Filterbar";
import { fetchHouseList } from "../../util/getHouse";
import Pagination from "@mui/lab/Pagination";

export async function getServerSideProps() {
  const houseList = await fetchHouseList();
  return {
    props: {
      houseList,
    },
  };
}

export default function Home({ houseList }) {
  const [list, setList] = useState(houseList);
  const [currentPage, setCurrentPage] = useState(1);

  const handleSearchResults = (results) => {
    setList(results);
  };

  const handleFilterPriceChange = (filterValue) => {
    const filteredProducts = houseList.filter(
      (product) => product.price <= filterValue
    );
    setList(filteredProducts);
  };

  const handleTypeFilter = (filterValue) => {
    const filteredList = houseList.filter(
      (house) => house.type === filterValue
    );
    setList(filteredList);
  };

  const itemsPerPage = 6; 
  const startIndex = (currentPage - 1) * itemsPerPage;
  const endIndex = startIndex + itemsPerPage;
  const paginatedData = list.slice(startIndex, endIndex);

  const handlePageChange = (event, page) => {
    setCurrentPage(page);
  };

  return (
    <div>
      <Head>
        <title>Homi Test App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="img/logo.png" />
      </Head>
      <h1 className={styles.featured}>FEATURED PROPERTIES</h1>
      <hr className={styles.underline} />
      <SearchBar onSearchResults={handleSearchResults} />

      <FilterBar
        typeFilterCallback={handleTypeFilter}
        priceFilterCallback={handleFilterPriceChange}
      />
      <div className={styles.container}>
        <div className={styles.cardContainer}>
          {paginatedData.map((house) => (
            <HomeCard key={house.listing_id} houses={house} />
          ))}
        </div>
      </div>
      <div className={styles.paginationContainer}>
        <Pagination
          count={Math.ceil(list.length / itemsPerPage)}
          page={currentPage}
          onChange={handlePageChange}
          variant="outlined"
          shape="rounded"
          color="primary"
        />
      </div>
    </div>
  );
}
